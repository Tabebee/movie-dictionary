{"version":3,"sources":["config/config.js","logo.svg","components/ActorImage.js","components/SearchBar.js","components/Grid.js","components/MovieThumb.js","components/MoreButton.js","components/Spinner.js","components/Home.js","components/Header.js","components/Navigation.js","components/MovieInfo.js","components/helpers.js","components/MovieInfoBar.js","components/Actor.js","components/Movie.js","components/NotFound.js","App.js","index.js"],"names":["module","exports","API_KEY_V3_AUTH","API_URL","API_READ_ACCESS_TOKEN_v4_AUTH","API_IMAGE_BASE","BD_SIZE","POSTER_SIZE","ActorImage","props","className","style","background","image","title","text","SearchBar","state","value","timeout","searchThis","event","setState","target","clearTimeout","setTimeout","callback","console","log","this","name","size","type","placeholder","onChange","Component","Grid","header","loading","children","map","element","i","key","MovieThumb","clickable","to","pathname","MovieId","MovieName","src","alt","MoreButton","onClick","Spinner","Home","movies","currentPage","totalPages","searchItem","fetchItems","endpoint","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","SearchMovies","config","loadMoreButton","getItem","parse","endPoint","backdrop_path","original_title","overview","poster_path","id","Header","Navigation","movie","MovieInfo","min","max","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","link","actor","profile_path","character","Movie","actors","actorsLink","status_code","match","params","movieId","crew","filter","member","job","cast","catch","err","location","movieName","runtime","NotFound","App","basename","process","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbf45841.chunk.js","sourcesContent":["module.exports = {\n    API_KEY_V3_AUTH: '268342a3903faabb4ba8d05762fc8785',\n    API_URL: 'https://api.themoviedb.org/3/',\n    API_READ_ACCESS_TOKEN_v4_AUTH: 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNjgzNDJhMzkwM2ZhYWJiNGJhOGQwNTc2MmZjODc4NSIsInN1YiI6IjVkOGQ0MDM2NzliM2Q0MDAxZjg5MmRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CerIuuGGjMDaErujsX8ocK0Fob-7UtsT2iVgXn4ZKNk',\n    API_IMAGE_BASE: 'http://image.tmdb.org/t/p/',\n    BD_SIZE: 'w1280',\n    POSTER_SIZE: 'w500'\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\n\nconst ActorImage = (props) => {\n    return(\n        <div className='rmdb-heroimage'\n             style={{\n                 background:\n                    `linear-gradient(to bottom, rgba(0,0,0,0)\n                     39%,rgba(0,0,0,0)\n                     41%,rgba(0,0,00,.65)\n                     100%),url('${props.image}'), #1c1c1c`\n             }}\n        >\n            <div className='rmdb-heroimage-content'>\n                <div className='rmdb-heroimage-text'>\n                    <h1>{props.title}</h1>\n                    <p>{props.text}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ActorImage;\n\n","import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\n\n// Controlled Component\nclass SearchBar extends Component {\n    state = {\n        value: ''\n    }\n\n    timeout = null;\n\n    searchThis = (event) => {\n        this.setState({ value: event.target.value })\n        clearTimeout(this.timeout)\n        this.timeout = setTimeout( () => {\n            this.props.callback(this.state.value);\n        }, 500);\n    }\n\n    render(){\n        console.log(this.props);\n        return(\n            <div className='rmdb-searchbar'>\n                <div className='rmdb-searchbar-content'>\n                    <FontAwesome\n                        className='rmdb-fa-search'\n                        name='search'\n                        size='2x'\n                    />\n                    <input\n                        type='text'\n                        className='rmdb-searchbar-input'\n                        placeholder='Search'\n                        onChange={this.searchThis}\n                        value={this.state.value}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Grid = (props) => {\n\n    const renderGridElements = () => {\n        const gridElements = props.children.map( (element, i) => {\n            return(\n                <div key={i} className='rmdb-grid-element'>\n                    {element}\n                </div>\n            )\n        } )\n        return gridElements;\n    }\n\n\n\n\n    return(\n        <div className='rmdb-grid'>\n            {props.header && !props.loading ?\n                <h1>{props.header}</h1> : null\n            }\n            <div className='rmdb-grid-content'>\n                {renderGridElements()}\n            </div>\n        </div>\n    )\n}\n\nGrid.propTypes = {\n    header: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default Grid;\n\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieThumb = (props) => {\n    // console.log(props)\n    return(\n        <div className='rmdb-moviethumb'>\n            {props.clickable ?\n                <Link to={{ pathname: `/${props.MovieId}`, MovieName: `${props.MovieName}` }}>\n                    <img src={props.image} alt=\"moviethumb\" />\n                </Link>\n                :\n                <img src={props.image} alt=\"moviethumb\" />\n            }\n\n        </div>\n    )\n}\n\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    MovieId: PropTypes.number,\n    MovieName: PropTypes.string\n}\n\nexport default MovieThumb;\n\n","import React from 'react';\n\nconst MoreButton = (props) => {\n    return(\n        <div className='rmdb-loadmorebtn' onClick={props.onClick}>\n            <p>\n                {props.text}\n            </p>\n        </div>\n    )\n}\n\nexport default MoreButton;\n\n","import React from 'react';\n\nconst Spinner = (props) => {\n    return(\n        <div className='loader'>\n\n        </div>\n    )\n}\n\nexport default Spinner;\n\n\n\n// Props are like Html attributes in a way. Can be used to transport data DOWN to other components but you CANT transport data UP\n\n// State is where the data lives in the component\n\n// Important Tip: When state is changed in class components, react re-renders the component automatically\n\n","import React, { Component } from 'react';\nimport ActorImage from './ActorImage';\nimport SearchBar from './SearchBar';\nimport Grid from './Grid';\nimport MovieThumb from './MovieThumb';\nimport MoreButton from './MoreButton';\nimport Spinner from './Spinner';\n\nimport config from '../config/config';\n\nclass Home extends Component {\n    state = {\n        movies: [],\n        ActorImage: null,\n        loading: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchItem: ''\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('HomePageState')) {\n            const state = JSON.parse(localStorage.getItem('HomePageState'));\n            this.setState ({ ...state })\n        } else {\n            this.setState({ loading: true });\n            const endPoint = `${config.API_URL}movie/popular?api_key=${config.API_KEY_V3_AUTH}&language=en-US&page=1`;\n            this.fetchItems(endPoint);\n        }\n    }\n\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n            .then(result => result.json())\n            .then(result => {\n                console.log(result);\n                this.setState({\n                    movies: [...this.state.movies, ...result.results],\n                    ActorImage: this.state.ActorImage || result.results[0],\n                    loading: false,\n                    currentPage: result.page,\n                    totalPages: result.total_pages\n                }, () => {\n                    // Only save to loval storage awhen not doing search\n                    if (this.state.searchItem === \"\") {\n                        localStorage.setItem('HopePageState', JSON.stringify(this.state) )\n                    }\n                } )\n            })\n    }\n\n    SearchMovies = (searchItem) => {\n        console.log(searchItem);\n        let endpoint = '';\n        this.setState({\n            movies: [],\n            loading: true,\n            searchItem\n        })\n\n        if (searchItem === '') {\n            endpoint = `${config.API_URL}movie/popular?api_key=${config.API_KEY_V3_AUTH}&language=en-US&page=1`;\n        } else {\n            endpoint = `${config.API_URL}search/movie?api_key=${config.API_KEY_V3_AUTH}&language=en-US&query=${searchItem}`;\n            console.log(endpoint);\n        }\n\n        this.fetchItems(endpoint);\n\n    }\n\n    loadMoreButton = () => {\n        let endpoint = '';\n        this.setState({ loading: true });\n        console.log('h')\n        if(this.state.searchItem === '') {\n            endpoint = `${config.API_URL}movie/popular?api_key=${config.API_KEY_V3_AUTH}&language=en-US&page=${this.state.currentPage + 1}`\n        } else {\n            endpoint = `${config.API_URL}search/movie?api_key=${config.API_KEY_V3_AUTH}&language=en-US&query=${this.state.searchItem}&page=${this.state.currentPage + 1}`\n        }\n\n        this.fetchItems(endpoint);\n\n    }\n\n    render() {\n        return(\n            <div className='rmdb-home'>\n                { this.state.ActorImage ?\n                <div>\n                    <ActorImage\n                        image={`${config.API_IMAGE_BASE}${config.BD_SIZE}${this.state.ActorImage.backdrop_path}`}\n                        title={this.state.ActorImage.original_title}\n                        text={this.state.ActorImage.overview}\n                    />\n                    <SearchBar callback={this.SearchMovies} />\n                </div> : null }\n                <div className='rmdb-home-grid'>\n                    <Grid\n                        header={this.state.searchItem ? 'Search Result': 'Popular Movies'}\n                        loading={this.state.loading}\n                    >\n                    {this.state.movies.map( (element, i) => {\n                        // console.log(element.poster_path);\n                        return (\n                            <MovieThumb\n                                key={i}\n                                clickable={true}\n                                image={element.poster_path ? `${config.API_IMAGE_BASE}${config.POSTER_SIZE}${element.poster_path}` :\n                                    './images/no_image.jpg'\n                                }\n                                MovieId={element.id}\n                                MovieName={element.original_title}\n                            />\n                        )\n                    } )}\n                    </Grid>\n                    { this.state.loading ? <Spinner /> : null }\n                    { (this.state.currentPage < this.state.totalPages && !this.state.loading) ?\n                        <MoreButton text=\"Load More\" onClick={this.loadMoreButton} /> : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Home from \"./Home\";\n\n// Create Link for Logo\nimport { Link } from 'react-router-dom';\n\n\nconst Header = () => {\n\n    return (\n        <div className='rmdb-header'>\n            <div className='rmdb-header-content'>\n                <Link to='./'>\n                    <img className='rmdb-logo' src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n                </Link>\n                    <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = (props) => {\n    return (\n        <div className='rmdb-navigation'>\n            <div className='rmdb-navigation-content'>\n                <Link to=\"/\">\n                    <p>Home</p>\n                </Link>\n                <p>{props.movie}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;\n\n\n\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport config from '../config/config';\nimport MovieThumb from \"./MovieThumb\";\nimport FontAwesome from 'react-fontawesome';\n\nconst MovieInfo = (props) => {\n    return (\n        <div className='rmdb-movieinfo'\n             style={{\n                 background: props.movie.backdrop_path ? `url('${config.API_IMAGE_BASE}${config.BD_SIZE}${props.movie.backdrop_path}')` : '#000'\n             }}>\n            <div className='rmdb-movieinfo-content'>\n                <div className='rmdb-movieinfo-thumb'>\n                    <MovieThumb\n                        image={props.movie.poster_path ? `${config.API_IMAGE_BASE}${config.POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\n                        clickable={false}\n                    />\n                </div>\n                <div className='rmdb-movieinfo-text'>\n                    <h1>{props.movie.title}</h1>\n                    <h3>Plot</h3>\n                    <p>{props.movie.overview}</p>\n                    <h3>IMDB Rating</h3>\n                    <div className='rmdb-rating'>\n                        <meter min=\"0\" max=\"100\" low='40' high='70' value={props.movie.vote_average * 10}/>\n                        <p className='rmdb-score'>{props.movie.vote_average}</p>\n                    </div>\n                    {props.directors.length > 1 ?\n                        <h3>Directors</h3> : <h3> Director</h3>\n                    }\n                    {props.directors.map( (element, i) => {\n                        return(\n                            <p key={i} className='rmdb-director'>\n                                {element.name}\n                            </p>\n                        )\n                    } )}\n                </div>\n                <FontAwesome className='fa-film' name='film' size='5x' />\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;\n\n\n\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n    const hours = Math.floor(time / 60);\n    const mins = time % 60;\n    return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n    });\n    return formatter.format(money);\n}\n\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { calcTime, convertMoney } from \"./helpers\";\n\nimport FontAwesome from 'react-fontawesome';\n\n\n\nconst MovieInfoBar = (props) => {\n    return (\n        <div className='rmdb-movieinfobar'>\n            <div className='rmdb-movieinfo-content'>\n\n                <div className='rmdb-movieinfobar-content-col'>\n                    <FontAwesome className='fa-time' name='clock-o' size='2x'/>\n                    <span className='rmdb-movieinfobar-info'>\n                        Running Time: {calcTime(props.time)}\n                    </span>\n                </div>\n\n                <div className='rmdb-movieinfobar-content-col'>\n                    <FontAwesome className='fa-budget' name='money' size='2x'/>\n                    <span className='rmdb-movieinfobar-info'>\n                        Budget: {convertMoney(props.budget)}\n                    </span>\n                </div>\n\n                <div className='rmdb-movieinfobar-content-col'>\n                    <FontAwesome className='fa-revenue' name='ticket' size='2x'/>\n                    <span className='rmdb-movieinfobar-info'>\n                        Revenue: {convertMoney(props.revenue)}\n                    </span>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport config from '../config/config';\nimport { Link } from 'react-router-dom';\n\nconst Actor = (props) => {\n\n    const POSTER_SIZE = \"w154\";\n\n    const link = 'https://www.themoviedb.org/person/' + props.actor.id;\n    console.log('act ',link);\n\n    return (\n        <div className=\"rmdb-actor\">\n            <img\n                src={props.actor.profile_path ? `${config.API_IMAGE_BASE}${config.POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\n                alt=\"actorthumb\"\n            />\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n            {/*<a className='rmdb-actor-character linkTo' href={link} target='_blank' >Link</a>*/}\n        </div>\n    )\n}\n\nexport default Actor;","import React, { Component } from 'react';\n\nimport config from '../config/config';\n\nimport Navigation from './Navigation';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Grid from './Grid';\nimport Actor from './Actor';\nimport Spinner from './Spinner';\nimport './Movie.css';\n\n\nclass Movie extends Component {\n    state = {\n        movie: null,\n        actors: null,\n        directors: [],\n        loading: false,\n        actorsLink: null\n    }\n\n    componentDidMount() {\n        if( localStorage.getItem(`${this.props.match.params.movieId}`)) {\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\n            this.setState({ ...state });\n        } else {\n            this.setState({ loading: true });\n            const endpoint = `${config.API_URL}movie/${this.props.match.params.movieId}?api_key=${config.API_KEY_V3_AUTH}&language=en-US`;\n            this.fetchItems(endpoint);\n        }\n    }\n\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n            .then(result => result.json())\n            .then( result => {\n                console.log('result 39 ', result);\n                if(result.status_code) {\n                    this.setState({ loading: false });\n                }\n                // Movie Found proceed\n                else {\n                    this.setState({ movie: result },\n                        // Callback function\n                        () => {\n                        const endpoint=`${config.API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${config.API_KEY_V3_AUTH}&language=en-US`;\n                        fetch(endpoint)\n                            .then(result => result.json() )\n                            .then(result => {\n                                const directors = result.crew.filter( (member) => member.job === 'Director');\n\n                                this.setState({\n                                    actors: result.cast,\n                                    directors: directors,\n                                    loading: false,\n                                    actorsLink: result.cast\n                                }, () => {\n                                    localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\n                                } )\n                                console.log('state ', this.state)\n                            })\n                    } )\n\n                }\n            } )\n            .catch(err => console.log(\"Error: \", err))\n\n    }\n\n\n\n\n    render(){\n        return(\n            <div className='rmdb-movie'>\n                {this.state.movie ?\n                    <div>\n                        <Navigation movie={this.props.location.movieName} />\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\n                    </div>\n                    : null\n                }\n\n                {this.state.actors ?\n                    <div className='rmdb-movie-grid'>\n                        <Grid header={'Actors'}>\n                            {this.state.actors.map( (element, i) => {\n                                return <Actor key={i} actor={element}/>\n                            })}\n                        </Grid>\n                    </div>\n                    : null\n                }\n\n                {!this.state.actors && !this.state.loading ?\n                    <h1>No Movie Found!!!</h1> : null\n                }\n                {this.state.loading ? <Spinner /> : null}\n\n                {/*<Grid />*/}\n                <Spinner />\n\n            </div>\n        )\n    }\n}\n\n\nexport default Movie;\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1> The requested page does not exist! </h1>\n        </div>\n    )\n}\n\n\n\nexport default  NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport  Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n\nconst App = () => {\n    return (\n        <div className=\"\">\n\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <React.Fragment>\n                    <Header />\n                    {/*<Home />*/}\n                    <Switch>\n                        <Route path=\"/\" component={Home} exact />\n                        <Route path=\"/:movieId\" component={Movie} exact />\n                        <Route component={NotFound} />\n                    </Switch>\n                </React.Fragment>\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}